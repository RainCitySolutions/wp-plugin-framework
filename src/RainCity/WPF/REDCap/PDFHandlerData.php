<?php
namespace RainCity\WPF\REDCap;


class PDFHandlerData {
    private $rcd;
    private $form;
    private $event;
    private $pdf;

    /**
     * Represents the data passed between the server and the browser in
     * requesting a PDF version of a completed form/instrument.
     *
     * @param string $rcd   A REDCap record id
     * @param string $form  A REDCap form/instrument name
     * @param string $event A REDCap event name or null if not applicable
     * @param string $pdf   The name of the PDF file to be generated
     */
    public function __construct(string $rcd, string $form, ?string $event, string $pdf) {
        $this->rcd = $rcd;
        $this->form = $form;
        $this->event = $event;
        $this->pdf = $pdf;
    }

    public function getRecord(): string { return $this->rcd; }
    public function getForm(): string { return $this->form; }
    public function getEvent(): ?string { return $this->event; }
    public function getPdf():string { return $this->pdf; }

    /**
     * Generates the string to be used in requesting the PDF for the
     * completed form/instrument. This string would be later be passed
     * to fromString().
     *
     * @return string
     *
     * @see PDFHandlerData::fromString()
     */
    public function toString ():string {
        $str = serialize([
            $this->rcd,
            $this->form,
            $this->event,
            $this->pdf
        ]);
        $encStr = gzdeflate($str);
        $urlStr = self::base64_encode_url($encStr);

        return $urlStr;
    }

    /**
     * Creates a instance of PDFHandlerData using the string provided. The
     * string would have been previously created by calling
     * PDFHandlerData::toString()
     *
     * @param string $str A string previously generated by a call to PDFHandlerData::toString().
     *
     * @return PDFHandlerData|null Returns an instance of PDFHandlerData or
     *          null if the parameter passed was not generated by toString().
     *
     * @see PDFHandlerData::toString()
     */
    public static function fromString(string $str): ?PDFHandlerData
    {
        $obj = (new \ReflectionClass(PDFHandlerData::class))->newInstanceWithoutConstructor();

        $gzStr = self::base64_decode_url($str);
        $str = gzinflate($gzStr);

        list (
            $obj->rcd,
            $obj->form,
            $obj->event,
            $obj->pdf
            ) = unserialize($str);

        if (empty($obj->rcd)) {
            $obj = null;
        }

        return $obj;
    }

    private static function base64_encode_url($string) {
        return str_replace(['+','/','='], ['-','_',''], base64_encode($string));
    }

    private static function base64_decode_url($string) {
        return base64_decode(str_replace(['-','_'], ['+','/'], $string));
    }

}
